<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
  https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml
-->

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java, properties, xml"/>

<!--
    <module name="FileLength" /> 
-->

    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf" />
    </module>

    <module name="RegexpMultiline">
        <property name="format" value="\n{3,}"/>
        <property name="message" value="File contains a sequence of empty lines."/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\r\n{3,}"/>
        <property name="message" value="File contains a sequence of empty lines."/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value=" \n"/>
        <property name="message" value="Line has trailing whitespace"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value=" \r\n"/>
        <property name="message" value="Line has trailing whitespace"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\{\n\n"/>
        <property name="message" value="Blank line after opening brace"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\{\r\n\r\n"/>
        <property name="message" value="Blank line after opening brace"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\n\n\s*\}"/>
        <property name="message" value="Blank line before closing brace"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\r\n\r\n\s*\}"/>
        <property name="message" value="Blank line before closing brace"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\n\n\Z"/>
        <property name="message" value="Blank line before end of file"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\r\n\r\n\Z"/>
        <property name="message" value="Blank line before end of file"/>
    </module>

    <!--
    <module name="RegexpMultiline">
        <property name="format" value="(\r\n|\r)(.*(\r\n|\r|\n))*.*"/>
        <property name="message" value="Found non-Unix line delimiter(s)"/>
    </module>
    -->

    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="RegexpSingleline">
        <property name="format" value=" +.*\t+"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has tabs after spaces"/>
    </module>

    <module name="RegexpHeader">
        <property name="fileExtensions" value="java"/>
    </module>

    <module name="TreeWalker">
        <property name="tabWidth" value="2"/>

        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>

        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>

        <module name="FileContentsHolder"/>
        <module name="AnnotationUseStyle"/>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>

        <module name="JavadocType">
            <property name="excludeScope" value="private"/>
        </module>

        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
        </module>

        <module name="JavadocVariable">
            <property name="excludeScope" value="private"/>
        </module>

        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>

        <module name="LocalFinalVariableName">
            <property name="format" value="^(([a-z][a-zA-Z0-9]*)|([A-Z][A-Z0-9]*(_[A-Z0-9]+)*))$" />
        </module>

        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>

        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="ParameterName"/>
        <module name="StaticVariableName"/>

        <module name="TypeName">
            <message key="name.invalidPattern"
                     value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module name="AvoidStarImport" />
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <module name="ImportOrder">
            <property name="groups" value="*,javax,java"/>
            <property name="ordered" value="false"/>
            <property name="separated" value="false"/>
            <property name="option" value="bottom"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>

        <module name="LineLength">
            <property name="max" value="250"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>

        <module name="OuterTypeNumber"/>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>

        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA,SEMI"/>
        </module>

        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,
        BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,
        LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,
        LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,
        LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,
        LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,
        NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,SL,SLIST,SL_ASSIGN,
        SR,SR_ASSIGN,STAR,STAR_ASSIGN,TYPE_EXTENSION_AND"/>
        </module>

        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>
        <module name="AvoidNestedBlocks"/>

        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>

        <module name="LeftCurly">
            <property name="maxLineLength" value="100"/>
        </module>

        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
        </module>

        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>

        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="setterCanReturnItsClass" value="true"/>
        </module>

        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>

        <module name="IllegalToken">
            <property name="tokens" value="LITERAL_NATIVE"/>
        </module>

        <module name="InnerAssignment"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuppressWarnings"/>

        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>

        <module name="NoClone"/>
       <!-- <module name="NoFinalizer"/>-->
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="PackageDeclaration" />
<!--        <module name="ParameterAssignment"/> -->
        <module name="DefaultComesLast"/>
        <module name="FallThrough"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="UnnecessaryParentheses"/>
        <module name="OneStatementPerLine"/>

        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
        </module>

        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>

        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>

        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>

        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true"/>
            <property name="protectedAllowed" value="true"/>
            <!-- Allow public members at the coder's discretion, for struct-like things. -->
            <property name="publicMemberPattern" value="^.*$" />
        </module>

        <module name="MutableException"/>
        <module name="ArrayTypeStyle"/>
        <module name="UpperEll"/>
        <module name="OuterTypeFilename"/>
        <!--<module name="FinalParameters"/>-->

<!--
        <module name="RegexpSinglelineJava">
            <property name="format" value="System.exit"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Don't System.exit(), throw a RuntimeException()" />
        </module>
-->

        <module name="GenericWhitespace">
            <message key="ws.followed"
                     value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded"
                     value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow"
                     value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded"
                     value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>

        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>

        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>

        <module name="AnnotationLocation">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>

        <module name="AnnotationLocation">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>

        <!-- <module name="OverloadMethodsDeclarationOrder"/> -->
        <!-- <module name="VariableDeclarationUsageDistance"/> -->

        <!--
        <module name="TodoComment">
            <property name="format" value="TODO"/>
            <property name="severity" value="info"/>
        </module>
        -->
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="suppressions.xml"/>
    </module>
</module>